- name: Limpeza de cache
  ansible.builtin.command: apt-get clean
  become: true

- name: Instalação da dependência "{{ item }}"
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - python3
    - python3-pip
#     - apt-transport-https
#     - ca-certificates
#     - curl
#     - gnupg-agent
#     - software-properties-common

- name: Adição de chave GPG
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Adição de repositório do docker
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Instalação de docker
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: true
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: Configuração de inicialização de docker
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Instalação de docker-compose
  ansible.builtin.get_url:
    url: https://github.com/docker/compose/releases/download/v2.5.1/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'

- name: Instalação de dependências Pip
  ansible.builtin.pip:
    name: "{{ item }}"
  loop:
    - docker==6.1.3
    - docker-compose
    - requests==2.31.0

- name: Criação de rede no docker
  community.docker.docker_network:
    name: servicos
    ipam_config:
      - subnet: "{{ docker_servicos_network_ip_address_start | default ('172.18') }}.0.0/16"
        iprange: "{{ docker_servicos_network_ip_address_start | default ('172.18') }}.0.0/17"