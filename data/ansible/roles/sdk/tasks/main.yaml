- name: Verificando existencia de 'secrets.json'
  ansible.builtin.stat:
    path: /etc/mesa/secrets.json
  register: secrets_stats

- name: Escrita de arquivo de secrets
  block:
  - name: Definição de variáveis para serviço de autenticação
    ansible.builtin.set_fact:
      auth_secret: "{{ lookup('community.general.random_string', special=false, length=12) }}"
      encription_key: "ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg=" # todo

  - name: Definição de variáveis para database
    ansible.builtin.set_fact:
      mongo_db_password: "{{ lookup('community.general.random_string', special=false, length=12) }}"
      mongo_db_username: "admin"
      
  - name: Definição de 'secrets_content'
    ansible.builtin.set_fact:
      secrets_content:
        mongodb:
          user: "{{ mongo_db_username }}"
          pass: "{{ mongo_db_password }}"
        auth:
          secret: "{{ auth_secret }}"
          key: "{{ encription_key }}"

  - name: Escrita de arquivo com informações
    ansible.builtin.copy:
      dest: /etc/mesa/secrets.json
      content: "{{ secrets_content }}"
  when: not secrets_stats.stat.exists

- name: Leitura de secrets
  ansible.builtin.set_fact:
    secrets: "{{ lookup('file', '/etc/mesa/secrets.json') | from_json }}"

- name: Criação de pasta para arquivos de compose
  ansible.builtin.file:
    path: "{{ compose_dir_path }}"
    state: directory

- name: Escrita de arquivo de compose em pasta
  ansible.builtin.template:
    src: templates/composes/auth-compose.yaml.j2
    dest: "{{ compose_dir_path }}/auth-compose.yaml"

- name: Setup de serviço de Autenticação
  community.docker.docker_compose:
    project_src: "{{ compose_dir_path }}" 
    files:
      - auth-compose.yaml
