- name: Leitura de secrets
  ansible.builtin.set_fact:
    secrets: "{{ lookup('file', '/etc/mesa/secrets.json') | from_json }}"

- name: Definição de variáveis
  ansible.builtin.set_fact:
    mongo_db_username: "{{ secrets.mongodb.user }}"
    mongo_db_password: "{{ secrets.mongodb.pass }}"
    new_tenant_id: "{{ tenant | default(10000 | random | to_uuid | upper) }}"

- name: Criação de database e usuário inicial
  community.docker.docker_container_exec:
    container: composes-mongodb-1
    command: >
        mongo --username {{ mongo_db_username }} --password {{ mongo_db_password }} --eval '
        db = db.getSiblingDB("{{ new_tenant_id }}");
        db.createCollection("auth_users");
        var user = db.auth_users.findOneAndUpdate(
          {
            email: "admin@example.com",
            password: "gAAAAABmw5DcFwUlG1tES3PTyRJSCXARRgboAudJ5IHhAfRC0MyTS-8gTAACAidQbWzcU_MU5p_rLMLhz07XIa5PHk8KpTf09A==",
            is_admin: true
          },
          {
            $setOnInsert: {
              email: "admin@example.com",
              password: "gAAAAABmw5DcFwUlG1tES3PTyRJSCXARRgboAudJ5IHhAfRC0MyTS-8gTAACAidQbWzcU_MU5p_rLMLhz07XIa5PHk8KpTf09A==",
              is_admin: true
            }
          },
          {
            returnNewDocument: true,
            upsert: true
          }
        );

        db = db.getSiblingDB("general");
        printjson()

        db.auth_users_by_tenant.findOneAndUpdate(
          {
            user_id: user._id,
            tenant_id: "{{ new_tenant_id }}",
            email: user.email
          },
          {
            $setOnInsert: {
              user_id: user._id,
              tenant_id: "{{ new_tenant_id }}",
              email: user.email
            }
          },
          {
            returnNewDocument: true,
            upsert: true
          }
        );

        '
    chdir: /
  register: result

  # todo -  Criar Database General e Collection 'auth_users_by_tenant'

        #   tenant_registry = {
        #     'user_id': created_user['_id'],
        #     'tenant_id': tenant_id,
        #     'email': email
        # }

        # g.db['auth_users_by_tenant'].insert_one(tenant_registry)

